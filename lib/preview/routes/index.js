const { getModules, getTemplates } = require('../previewUtils');

const buildIndexRouteHandler = (sessionInfo) => {
  return async (req, res) => {
    const responseHTML = await buildIndexHtml(sessionInfo);
    res.status(200).set({ 'Content-Type': 'text/html' }).end(responseHTML);
  }
}

const buildIndexHtml = async (sessionInfo) => {
  const { domains } = sessionInfo;
  const modules = (await getModules(sessionInfo)).children;
  const templates = (await getTemplates(sessionInfo)).children;

  return `
    <!DOCTYPE html>
    <head>
    </head>
		<body>
		  <h1>Hello World!</h1>
		  <p>This markup was generated by the Cloudflare Worker.</p>
      <h1>Domains</h1>
      ${getSiteList(domains)}
      <h1>Modules</h1>
      ${getModuleList(modules)}
      <h1>Templates</h1>
      ${getTemplateList(templates)}
		</body>
  `;
}


const getSiteList = (domains) => {
  return listify(
    domains,
    domainObj => `proxy?page=http://${domainObj.domain}`,
    domainObj => domainObj.domain
  );
}

const getModuleList = (modules) => {
  return listify(
    modules.map(module => module.split('.')[0]),
    moduleName => `module/${moduleName}`,
    moduleName => moduleName
  );
}

const getTemplateList = (templates) => {
  return listify(
    templates,
    templateName => `template/${templateName}`,
    templateName => templateName
  )
}

const listify = (objects, hrefPathBuilder, labelBuilder) => {
  return '<ul>'
    + objects.reduce((x,y) => x += `<li><a href="http://localhost:3000/${hrefPathBuilder(y)}">${labelBuilder(y)}</a></li>`, '')
    + '</ul>';
}

module.exports = {
  buildIndexRouteHandler
}
